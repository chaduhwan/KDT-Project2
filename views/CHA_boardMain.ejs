<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- axios 링크 -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- css , icon라이브러리 -->
    <link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css" />
    <script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js"></script>
    <link
    rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    />
    <script src="https://kit.fontawesome.com/1a34eeff0c.js"crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js" integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" crossorigin="anonymous" ></script>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <!-- 폰트 -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=ADLaM+Display&family=Jua&family=Monoton&display=swap" rel="stylesheet">
    <!-- 부트스트랩cdn -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css"rel="stylesheet"integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx"crossorigin="anonymous"/>
    <!-- css 연결 -->
    <link rel="stylesheet" href="/public/css/classMain.css" />
    <link rel="stylesheet" href="/public/css/board.css" />
    <link rel="stylesheet" href="/public/css/placeSearch.css" />
    <title>Document</title>
    <style>
        .for:hover {
          background-color: white;
          border-radius: 3px;
          border-style: solid;
          border-width: 1px;
          box-sizing: border-box;
          border-color: #e4e7ee;
          cursor: pointer;
        }
      </style>
</head>
<body>
    <div class="main_container">
        <div class="head1 d-flex justify-content-between">
          <div class="head1-logo "><img src="/public/default/logo-removebg.png" style="width: 30px; height: 30px;"></img><span>CLAVI</span></div>
          <i class="head1-profile fa-solid fa-user " data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight" style="color: white; "></i>
            <!-- <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">Toggle right offcanvas</button> -->
        </div>
        <ul class="nav nav-tabs">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#"><i class="fa-solid fa-chalkboard-user"></i>  BOARD</a>
            
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#"><i class="fa-solid fa-chair"></i>  SEAT</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#"><i class="fa-solid fa-comments"></i>  MESSAGE</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#"><i class="fa-solid fa-book"></i>  NOTE</a>
          </li>
        </ul>
        <div class="main_content">
            <header class="board-hearder">
                <form  class="search-bar" name="board-search">
                    <button type="button" class="search-button" onclick="boardSearch()">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </button>
                    <select id="search_select">
                        <option value="title">제목</option>
                        <option value="content">내용</option>
                        <option value="tag">태그</option>
                    </select>
                    <input type="text" name="searchBar" placeholder="검색어를 입력해주세요">
                </form>
                <div class="subject-object" onclick="Allboard()"># 모든글</div>
                <% for (let i = 0; i < subjectId.length; i++) { %>
                    <div class="subject-object" data-subject-id="<%= subjectId[i] %>" onclick="enterSubject(this)"># <%= subjectTitle[i] %></div>
                    <% } %>
                    <% if(userType == "leader" ){ %>
                    <form class="subject-List" name="subjectList">
                        <input type="text" name="SubjectTitle" placeholder="게시판 제목">
                        <button type="button" class="subject-button" onclick="SubjectMake()">
                            <i class="fa-solid fa-plus"></i>
                        </button>
                    </form>
                <% } %>
            </header>
            <div class="board-container">
                <main class="board-main">
                    <% for (let i = 0 ; i < data.length ; i ++) {%>
                    <div class="board-object" data-board-id="<%=data[i].BoardId%>" onclick="boardDetail(this)">
                            <div class="board-high">
                                <span id="borad-ID" hidden>등록번호 : <%=data[i].BoardId%></span>
                                <span class="board-title"><%=data[i].title%></span>
                            </div>
                            <div class="board-mid">
                                <img class="board-writer-img" src="<%=data[i].place%>">
                                <span class="board-writer"> <%=data[i].writer%></span>
                                <span class="board-date"> <%=data[i].date%></span>
                            </div>
                            <span class="board-content"> <%=data[i].content%></span>
                            <div class="board-bottom">
                                <span class="board-tag"> 태그 : <%=data[i].tag%></span>
                                <button type="button" class="boardLike" value="<%=data[i].BoardId%>" onclick="BoardLike(this)">
                                    <i class="fa-regular fa-thumbs-up"><%=likeArr[i]%></i>
                                </button>
                            </div>
                        </div>
                                <%}%>
                            </main>
                <button id="btn-modal">함께 나누고픈 의견이 있나요?</button>
            </div>
            </div>
            <div id="modal" class="modal-overlay">
                <div class="modal-window">
                    <form name="board-write">
                        <div class="modal-input">
                            <input type="text" name="title" placeholder="제목을 입력해주세요">
                            <input type="text" name="tag" placeholder="태그를 입력해주세요">
                            <button class="board-tag-add" onclick="boardTag()">
                                <i class="fa-solid fa-tags"></i>
                            </button>
                            <button type="button" class="board-onWrite" onclick="boardWrite()">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </button>
                        </div>
                        <div class="write-tag-bar"></div>
                        <div id="searchModal">
                            <div id="closeBtn">&times;</div>
                            <div class="map_wrap" id="map_wrap">
                              <div id="map"></div>
                              <div id="menu_wrap" class="bg_white">
                                <div class="option">
                                  <div>
                                    키워드 :
                                        <input type="text" value="재모식당" id="keyword" size="15" />
                                        <button type="button" onclick="searchPlaces()">검색하기</button>
                                  </div>
                                </div>
                                <hr />
                                <ul id="placesList"></ul>
                                <div id="pagination"></div>
                              </div>
                            </div>
                          </div>
                        <div id="editor"></div>
                    </form> 
                </div>
            </div>
    </div> 

        <div class="offcanvas offcanvas-end " tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
            <div class="offcanvas-header">
              <h5 class="offcanvas-title" id="offcanvasRightLabel"></h5>
              <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body ">
              <div class="profile_img"><img src="/public/default/모래성.png" style="width: 200px;"></div>
              <br />
              <div class="offcanvas-menu ">
                <div class="my_page btn">마이페이지</div>
                <div class="planner btn">플래너</div>
                <a class="btn" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                  클래스 변경하기
                </a>
              
                <ul class="dropdown-menu">
                  <li><a class="dropdown-item" href="#">KDT 9기</a></li>
                  <li><a class="dropdown-item" href="#">두환이네</a></li>
                  <li><a class="dropdown-item" href="#">KDT 1기</a></li>
                </ul>
                <div class="logout btn" onclick="logout()">로그아웃</div>
              </div>
            </div> 
        </div>
        <!-- 카카오 맵 cdn  -->
    <script
    type="text/javascript"
    src="//dapi.kakao.com/v2/maps/sdk.js?appkey=cccdfeee839e396115f84e87ae5be2dc&libraries=services"
  ></script>
        <script src="/public/placeSearch2.js"></script>
          <script src="/public/js/header.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
<script>

        if(document.querySelector(".board-main").hasChildNodes){

            for(let i = 0; i < document.querySelector(".board-main").children.length; i++){
                    let temp = document.querySelector(".board-main").children[i].children[2].innerText 
                    document.querySelector(".board-main").children[i].children[2].innerText = ""
                    let arr = Array.from(format(temp))
                for(let j = 0; j < arr.length; j++){
                     document.querySelector(".board-main").children[i].children[2].appendChild(arr[j])   
        }}}
        
    function boardDetail(element) {
        const boardid = element.getAttribute('data-board-id');
        axios({
            method : 'GET',
            url : `/board/detail?boardId=${boardid}`,
            params :{ boardId : boardid}
        }).then(
            window.location.href=`/board/detail?boardId=${boardid}`
        )
    }

    async function SubjectMake() {
        const form = document.forms['subjectList']
        const result = await axios({
            method : 'POST',
            url : '/subject/make',
            data : {subjectTitle:form.SubjectTitle.value}
        })
          window.location.reload();
    }

    async function enterSubject(element) {
        const SubjectId = element.getAttribute('data-subject-id');
         const res = await axios({
            method:'POST',
            url :'/subject/enter',
            data :{SubjectId}
        })
        const mainElement = document.querySelector('.board-main'); // main 요소를 선택합니다.
            while (mainElement.firstChild) {
                mainElement.removeChild(mainElement.firstChild);
            }

            console.log(res.data.data)
            for (let i = 0 ; i < res.data.data.length; i++) {
                const div = document.createElement('div')
                div.classList.add('board-object')
                div.setAttribute('data-board-id', `${res.data.data[i].BoardId}`)
                div.onclick = function() {
                boardDetail(this);};

                const boardHigh = document.createElement('div')
                boardHigh.classList.add('board-high')
                const boardMid = document.createElement('div')
                boardMid.classList.add('board-mid')
                const boardBottom = document.createElement('div')
                boardBottom.classList.add('board-bottom')

                const span1 = document.createElement('span');
                span1.textContent = ``;
                span1.id = 'board-ID'

                const span2 = document.createElement('span');
                span2.textContent= `${res.data.data[i].title}`
                span2.className = 'board-title'

                const span3 = document.createElement('span');
                span3.textContent= `${res.data.data[i].date}`
                span3.className = 'board-date'

                const span4 = document.createElement('span');
                span4.textContent= `${res.data.data[i].writer}`
                span4.className = 'board-writer'

                const span5 = document.createElement('span');
                let arr = Array.from(format(`${res.data.data[i].content}`))
                for(let j = 0; j < arr.length; j++){
                     span5.appendChild(arr[j])
                    }
                span5.className = 'board-content'

                const span6 = document.createElement('span');
                span6.textContent= `태그 : ${res.data.data[i].tag}`
                span6.className = 'board-tag'

                const button = document.createElement('button')
                button.value =  `${res.data.data[i].BoardId}`
                button.className = 'boardLike'
                button.onclick = function(){
                    BoardLike(this)
                }
                const icon = document.createElement('i')
                icon.className ="fa-regular fa-thumbs-up"
                icon.innerText= `${res.data.likeArr[i]}`
                button.appendChild(icon)

                boardHigh.appendChild(span1)
                boardHigh.appendChild(span2)

                boardMid.appendChild(span4)
                boardMid.appendChild(span3)

                boardBottom.appendChild(span6)
                boardBottom.appendChild(button)

                div.appendChild(boardHigh)
                div.appendChild(boardMid)
                div.appendChild(span5)
                div.appendChild(boardBottom)

                const main = document.querySelector('.board-main')
                main.appendChild(div)
            }
    }

    let tagAdd = []
     function boardTag() {
        event.preventDefault()
        const form = document.forms['board-write']
        const bar = document.querySelector('.write-tag-bar')

        const div = document.createElement('div')
        div.textContent = `: ${form.tag.value}`;
        div.classList.add('tag-object')

        bar.appendChild(div)

        tagAdd.push(form.tag.value)

         console.log(tagAdd)
        form.tag.value="";
    }

    async function boardWrite() {
        const form = document.forms['board-write']
        const now = new Date();
        const year = now.getFullYear()
        const month = now.getMonth()+1;
        const day = now.getDate();
        const hour = now.getHours();
        const min = now.getMinutes();

        const data = {
            title : form.title.value,
            date : `${year}년 ${month}월 ${day}일 ${hour}:${min}`,
            writer : '<%=user %>',
            content : editor.getHTML(),
            tag : tagAdd.join(', ')
        }
        const res =  await axios ({
            method : 'POST',
            url : '/board/write',
            data : data
        })
        if(res.data.result==false) {
            alert("게시판을 먼저 선택해주세요!")
            return;
        }
        tagAdd.length = 0;
            console.log(res.data.data)
            for (let i = 0 ; i < res.data.data.length; i++) {
                const div = document.createElement('div')
                div.classList.add('board-object')
                div.setAttribute('data-board-id', `${res.data.data[i].BoardId}`)
                div.onclick = function() {
                boardDetail(this);};

                const boardHigh = document.createElement('div')
                boardHigh.classList.add('board-high')
                const boardMid = document.createElement('div')
                boardMid.classList.add('board-mid')
                const boardBottom = document.createElement('div')
                boardBottom.classList.add('board-bottom')

                const span1 = document.createElement('span');
                span1.textContent = ``;
                span1.id = 'board-ID'

                const span2 = document.createElement('span');
                span2.textContent= `${res.data.data[i].title}`
                span2.className = 'board-title'

                const span3 = document.createElement('span');
                span3.textContent= `${res.data.data[i].date}`
                span3.className = 'board-date'

                const span4 = document.createElement('span');
                span4.textContent= `${res.data.data[i].writer}`
                span4.className = 'board-writer'

                const span5 = document.createElement('span');
                let arr = Array.from(format(`${res.data.data[i].content}`))
                for(let j = 0; j < arr.length; j++){
                     span5.appendChild(arr[j])
                    }
                span5.className = 'board-content'

                const span6 = document.createElement('span');
                span6.textContent= `태그 : ${res.data.data[i].tag}`
                span6.className = 'board-tag'

                const button = document.createElement('button')
                button.value =  `${res.data.data[i].BoardId}`
                button.className = 'boardLike'
                button.onclick = function(){
                    BoardLike(this)
                }
                const icon = document.createElement('i')
                icon.className ="fa-regular fa-thumbs-up"
                icon.innerText= `${res.data.likeArr[i]}`
                button.appendChild(icon)

                boardHigh.appendChild(span1)
                boardHigh.appendChild(span2)

                boardMid.appendChild(span4)
                boardMid.appendChild(span3)

                boardBottom.appendChild(span6)
                boardBottom.appendChild(button)

                div.appendChild(boardHigh)
                div.appendChild(boardMid)
                div.appendChild(span5)
                div.appendChild(boardBottom)

                const main = document.querySelector('.board-main')
                main.appendChild(div)
            }

            const writeTagBar = document.querySelector('.write-tag-bar');
            // write-tag-bar의 모든 자식 요소를 삭제
                while (writeTagBar.firstChild) {
                    writeTagBar.removeChild(writeTagBar.firstChild);
                }
                const textIput = document.querySelector('.ProseMirror');
            // write-tag-bar의 모든 자식 요소를 삭제
                while (textIput.firstChild) {
                    textIput.removeChild(textIput.firstChild);
                }
            form.reset()
            modal2.style.display = "none"
    }

    function BoardLike(button) {
        event.stopPropagation();
        const buttonValue = button.value;
        console.log(`버튼의 value: ${buttonValue}`);
            axios({
                method :'POST',
                url :'/board/like',
                data : {id : '<%=userid%>',BoardId : buttonValue}
            }).then(res=> {
                if (res.data.result==true) {
                    button.children[0].innerText =`${res.data.cou}`
                } else {
                    alert("이미 좋아요한 게시글입니다.!")
                }
        });
        }
    
    function boardSearch() {
        const form = document.forms['board-search']
        const searchValue = document.querySelector('#search_select')
        const data = {
            searchValue : searchValue.value, 
            searchBar : form.searchBar.value
        }
        console.log(data)
        axios ({
            method: 'POST',
            url : '/board/search',
            data : data
        }).then(res=>{
            const mainElement = document.querySelector('.board-main'); // main 요소를 선택합니다.
            while (mainElement.firstChild) {
                mainElement.removeChild(mainElement.firstChild);
            }

            console.log(res.data.data)
            for (let i = 0 ; i < res.data.data.length; i++) {
                const div = document.createElement('div')
                div.classList.add('board-object')
                div.setAttribute('data-board-id', `${res.data.data[i].BoardId}`)
                div.onclick = function() {
                boardDetail(this);};

                const boardHigh = document.createElement('div')
                boardHigh.classList.add('board-high')
                const boardMid = document.createElement('div')
                boardMid.classList.add('board-mid')
                const boardBottom = document.createElement('div')
                boardBottom.classList.add('board-bottom')

                const span1 = document.createElement('span');
                span1.textContent = ``;
                span1.id = 'board-ID'

                const span2 = document.createElement('span');
                span2.textContent= `${res.data.data[i].title}`
                span2.className = 'board-title'

                const span3 = document.createElement('span');
                span3.textContent= `${res.data.data[i].date}`
                span3.className = 'board-date'

                const span4 = document.createElement('span');
                span4.textContent= `${res.data.data[i].writer}`
                span4.className = 'board-writer'

                const span5 = document.createElement('span');
                let arr = Array.from(format(`${res.data.data[i].content}`))
                for(let j = 0; j < arr.length; j++){
                     span5.appendChild(arr[j])
                    }
                span5.className = 'board-content'

                const span6 = document.createElement('span');
                span6.textContent= `태그 : ${res.data.data[i].tag}`
                span6.className = 'board-tag'

                const button = document.createElement('button')
                button.value =  `${res.data.data[i].BoardId}`
                button.className = 'boardLike'
                button.onclick = function(){
                    BoardLike(this)
                }
                const icon = document.createElement('i')
                icon.className ="fa-regular fa-thumbs-up"
                icon.innerText= `${res.data.likeArr[i]}`
                button.appendChild(icon)

                boardHigh.appendChild(span1)
                boardHigh.appendChild(span2)

                boardMid.appendChild(span4)
                boardMid.appendChild(span3)

                boardBottom.appendChild(span6)
                boardBottom.appendChild(button)

                div.appendChild(boardHigh)
                div.appendChild(boardMid)
                div.appendChild(span5)
                div.appendChild(boardBottom)

                const main = document.querySelector('.board-main')
                main.appendChild(div)
            }
        })
    }

    const modal2 = document.getElementById("modal")
    const btnModal = document.getElementById("btn-modal")
    btnModal.addEventListener("click", e => {
        modal2.style.display = "flex"
        })
    modal2.addEventListener("click", e => {
    const evTarget = e.target
    if(evTarget.classList.contains("modal-overlay")) {
        modal2.style.display = "none"
        const form = document.forms['board-write']
        form.reset()
    }})

       const Editor = toastui.Editor;
       const editor = new Editor({
               el: document.querySelector('#editor'),
               height : '500px',
               initialEditType: 'markdown',
               previewStyle: 'vertical'
           });

           function format(text) {
                let html = new DOMParser();
                html = html.parseFromString(text, 'text/html');
                console.log(html.children[0].children[1].children)

                return html.children[0].children[1].children;
            }
        function Allboard() {
            window.location.reload()
        }
        let div = document.createElement('div');
      let smallDiv = document.createElement('div');
      div.style.cssText = `
                  width: 42px;
                  height: 45px;
                  color: black;
                  box-sizing: border-box;
                  display: flex;
                  text-align: center;
                  justify-content: center;
                  align-items: center;
              `;
      smallDiv.style.cssText = `
                  width: 32px;
                  height: 32px;
                  color: black;
                  box-sizing: border-box;
                  display: flex;
                  text-align: center;
                  justify-content: center;
                  align-items: center;
              `;

      div.classList.add('toast-editor-toolbar-group');
      smallDiv.innerHTML = `<i class="fa-solid fa-location-dot" style="font-size: 20px; color: #333"></i>`;
      smallDiv.classList.add('for');
      smallDiv.onclick = () => {
        showSearchPlaces();
      };
      div.appendChild(smallDiv);
      //   div.onclick = showSearchPlaces();

      smallDiv.addEventListener('mouseenter', () => {
        smallDiv.innerHTML += `<div class="toastui-editor-tooltip" style="display: block; top: 45px;">
            <div class="arrow"></div>
            <span class="text">Map</span>
          </div>`;
      });
      smallDiv.addEventListener('mouseleave', () => {
        smallDiv.innerHTML = space;
      });
      document
        .querySelector('.toastui-editor-defaultUI-toolbar')
        .insertBefore(
          div,
          document.querySelector('.toastui-editor-defaultUI-toolbar')
            .firstChild,
        );
      let space = smallDiv.innerHTML;
      console.log(document.querySelector('#editor').innerHTML);    
</script>
</html>
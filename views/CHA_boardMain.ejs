<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css" />
    <script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js"></script>
    <title>Document</title>
</head>
<body>
    <header class="board-hearder">
        <h1>모든글</h1>
        <form name="board-search">
            <select id="search_select">
                <option value="title">제목</option>
                <option value="content">내용</option>
                <option value="tag">태그</option>
            </select>
            <input type="text" name="searchBar">
            <button type="button" onclick="boardSearch()">검색</button>
        </form>
    </header>

    <main class="board-main">
        <% for (let i = 0 ; i < data.length ; i ++) {%>
        <div class="board-object" data-board-id="<%=data[i].BoardId%>" onclick="boardDetail(this)">
            <!-- <tr> -->
                <span id="borad-ID">등록번호 : <%=data[i].BoradId%></span>
                <span class="board-title"> 제목 : <%=data[i].title%></span>
                <span class="board-date"> 날짜 : <%=data[i].date%></span>
                <img class="board-writer-img" src="">
                <span class="board-writer"> 작성자 : <%=data[i].writer%></span>
                <span class="board-content"> <%=data[i].content%></span>
                <span class="board-tag"> 태그 : <%=data[i].tag%></span>
            <!-- </tr> -->
        </div>
        <button type="button" class="boardLike" value="<%=data[i].BoardId%>" onclick="BoardLike(this)"><%=data[i].like%></button>
            <%}%>
    </main>
    <footer class="board-footer">
        <form name="board-write">
            <input type="text" name="title" placeholder="제목을 입력해주세요">
            <div id="editor"></div>
            <!-- <input type="text" name="content" placeholder="내용을 입력해주세요"> -->
            <button class="board-onWrite" onclick="boardWrite()">작성하기</button>
        </form>
    </footer>


</body>
<script>

        if(document.querySelector(".board-main").hasChildNodes){

            for(let i = 0; i < document.querySelector(".board-main").children.length; i+=2){
                    let temp = document.querySelector(".board-main").children[i].children[5].innerText 
                    document.querySelector(".board-main").children[i].children[5].innerText = ""
                    let arr = Array.from(format(temp))
                for(let j = 0; j < arr.length; j++){
                     document.querySelector(".board-main").children[i].children[5].appendChild(arr[j])   
        }}}

    function boardDetail(element) {
        const boardid = element.getAttribute('data-board-id');
        axios({
            method : 'GET',
            url : `/board/detail?boardId=${boardid}`,
            params :{ boardId : boardid}
        }).then(
            window.location.href=`/board/detail?boardId=${boardid}`
        )
    }

    async function boardWrite() {
        const form = document.forms['board-write']
        const data = {
            title : form.title.value,
            date : Date(),
            writer : '<%=user %>',
            content : editor.getHTML()
        }
        await axios ({
            method : 'POST',
            url : '/board/write',
            data : data
        }).then(

           window.location.reload()
        )

    }

    function BoardLike(button) {
        const buttonValue = button.value;
        console.log(`버튼의 value: ${buttonValue}`);
            axios({
                method :'PATCH',
                url :'/board/like',
                data : {BoardId : buttonValue}
            }).then(res=> {
              button.innerText =`${res.data.data.like}`
        });
    }
    
    function boardSearch() {
        const form = document.forms['board-search']
        const searchValue = document.querySelector('#search_select')
        const data = {
            searchValue : searchValue.value, 
            searchBar : form.searchBar.value
        }
        console.log(data)
        axios ({
            method: 'POST',
            url : '/board/search',
            data : data
        }).then(res=>{
            const mainElement = document.querySelector('.board-main'); // main 요소를 선택합니다.
            while (mainElement.firstChild) {
                mainElement.removeChild(mainElement.firstChild);
            }

            console.log(res.data.data)
            for (let i = 0 ; i < res.data.data.length; i++) {
                const div = document.createElement('div')
                div.classList.add('board-object')
                div.setAttribute('data-board-id', `${res.data.data[i].BoardId}`)
                div.onclick = function() {
                boardDetail(this);};

                const tr = document.createElement('tr');
                const span1 = document.createElement('span');
                span1.textContent = `등록번호 : ${res.data.data[i].BoardId}`;
                span1.id = 'board-ID'

                const span2 = document.createElement('span');
                span2.textContent= `제목 : ${res.data.data[i].title}`
                span2.className = 'board-title'

                const span3 = document.createElement('span');
                span3.textContent= `날짜 : ${res.data.data[i].date}`
                span3.className = 'board-date'

                const span4 = document.createElement('span');
                span4.textContent= `작성자 : ${res.data.data[i].writer}`
                span4.className = 'board-writer'

                const span5 = document.createElement('span');
                span5.textContent= `내용 : ${res.data.data[i].content}`
                span5.className = 'board-content'

                const span6 = document.createElement('span');
                span6.textContent= `태그 : ${res.data.data[i].tag}`
                span6.className = 'board-tag'

                const button = document.createElement('button')
                button.value =  `${res.data.data[i].BoardId}`
                button.className = 'boardLike'
                button.innerText = `${res.data.data[i].like}`
                button.onclick = function(){
                    BoardLike(this)
                }

                tr.appendChild(span1);
                tr.appendChild(span2);
                tr.appendChild(span3);
                tr.appendChild(span4);
                tr.appendChild(span5);
                tr.appendChild(span6);
                div.appendChild(tr)
                const main = document.querySelector('.board-main')
                main.appendChild(div)
                main.appendChild(button)
            }
        })
    }

       const Editor = toastui.Editor;
       const editor = new Editor({
               el: document.querySelector('#editor'),
               height: '500px',
               initialEditType: 'markdown',
               previewStyle: 'vertical'
           });

           function format(text) {
                let html = new DOMParser();
                html = html.parseFromString(text, 'text/html');
                console.log(html.children[0].children[1].children)

                return html.children[0].children[1].children
                // 
                
            }
</script>
</html>
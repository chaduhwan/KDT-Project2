<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://kit.fontawesome.com/1a34eeff0c.js"crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js" integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" crossorigin="anonymous" ></script>
    <!-- 폰트 -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=ADLaM+Display&family=Jua&family=Monoton&display=swap" rel="stylesheet">
    <!-- axios cdn -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- 부트스트랩cdn -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css"rel="stylesheet"integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx"crossorigin="anonymous"/>
    <link rel="stylesheet" href="/public/css/profileHeader.css" />
    <!-- 소켓io 경로 -->
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="/public/css/profile.css">
    <!-- 메모 -->
    <link href="../public/css/base.css" rel="stylesheet" />
    <link href="../public/css/sandbox.css" rel="stylesheet" />
    <link href="../public/css/embla.css" rel="stylesheet" />
    <script src="https://unpkg.com/embla-carousel/embla-carousel.umd.js"></script>
    <title>Document</title>
  </head>

  <body>
    <div class="main_container">
      <div class="head1 d-flex justify-content-between">
        <div class="head1-logo "><img src="/public/default/logo-removebg.png" style="width: 30px; height: 30px;"></img><span>CLAVI</span></div>
        
      </div>

      <!-- 컨테이너 -->
      <div class="main_content" >

        <!-- 클래스 리스트 영역 -->
        <div class="class_list itemM">
          <div id="class-menu ">참여한 클래스</div>
          <!-- 클래스 목록 -->
          <div class="classes">
            <% for(let i = 0; i<Classes.length; i++){ %>
              <div data-class-id="<%=ClassesId[i]%>" onclick="enterClass(this)"><%=Classes[i]%></div>
              <%} %>
          </div>
         
          .
            <% if(data.userType == "leader" ){ %>
              <form name="ClassMake">
                <input type="text" name="className" placeholder="className">
                <button type="button" onclick="makeClass()">클래스 만들기</button>
              </form>
            <% } %> 
      
            <form name="ClassSignin">
              <input type="text" name="token" placeholder="token">
              <button type="button" onclick="signinClass()">클래스 참여하기</button>
            </form>
        </div>

        <!-- 로그아웃, 탈퇴 영역 -->
        <div class="exit-zone itemM">
          <button type="button" onclick="logout()">로그아웃</button>
          <button type="button" onclick="deleteUser(`<%= data.id %>`)">탈퇴하기</button>
        </div>

        <!-- 유저 정보 -->
        <div class="userInfo itemM">
          <div class="user-content">
          <!-- 프로필사진 -->
            <div class="profile_img_div"><img class="profile_img" src="<%= data.profileImgPath%>"></div>
            <div>
              <form onsubmit="fileupload(event)" name="form-upload">
                <div class="img-save">
                <input type="file" id="dynamic" /><button type="submit"  class="imgEdit" >사진 등록</button>
              </div>
              </form>
            </div>
            <!-- 회원 정보 -->
            <div class="profile-detail">
              <form name="form-profile" id="profile-form">
                <table>
                  <tr>
                    <th scope="row">이름</th>
                    <td><input type="text" id="name" value="<%= data.name %>" /></td>
                  </tr>
                  <tr>
                    <th scope="row">이메일</th>
                    <td><input type="email" id="email" value="<%= data.email%>" /></td>
                  </tr>
                  <tr>
                    <th scope="row">전화번호</th>
                    <td><input type="number" id="phone" value="<%= data.phone %>" /></td>
                  </tr>
                </table>
                <br/>
                <button id="editbutton" type="button" onclick="registerEdit(`<%= data.id %>`)">Edit</button>
              </form>
            </div>
          </div>
        </div>

        <!-- 플래너, 노트 존 -->
        <div class="my-note itemM">
          <div id="myPlanner"></div>
          <div id="myNote"></div>
        </div>

        <!-- 메모 -->
        <div class="memo-zone itemM">
          <section class="sandbox__carousel">
            <div class="embla">
              <div class="embla__viewport">
                <div class="embla__container">
                  <div class="embla__slide sorting">
                    <p>안녕</p>
                  </div>
                  <div class="embla__slide sorting">
                    <p>안녕</p>
                  </div>
                  <div class="embla__slide sorting">
                    <p>안녕</p>
                  </div>
                  <div class="embla__slide sorting">
                    <p>안녕</p>
                  </div>
                  <div class="embla__slide sorting">
                    <p>안녕</p>
                  </div>
                </div>
              </div>
      
              <div class="embla__buttons">
                <button class="embla__button embla__button--prev" type="button">
                  <svg class="embla__button__svg" viewBox="0 0 532 532">
                    <path
                      fill="currentColor"
                      d="M355.66 11.354c13.793-13.805 36.208-13.805 50.001 0 13.785 13.804 13.785 36.238 0 50.034L201.22 266l204.442 204.61c13.785 13.805 13.785 36.239 0 50.044-13.793 13.796-36.208 13.796-50.002 0a5994246.277 5994246.277 0 0 0-229.332-229.454 35.065 35.065 0 0 1-10.326-25.126c0-9.2 3.393-18.26 10.326-25.2C172.192 194.973 332.731 34.31 355.66 11.354Z"
                    ></path>
                  </svg>
                </button>
                <button class="embla__button embla__button--next" type="button">
                  <svg class="embla__button__svg" viewBox="0 0 532 532">
                    <path
                      fill="currentColor"
                      d="M176.34 520.646c-13.793 13.805-36.208 13.805-50.001 0-13.785-13.804-13.785-36.238 0-50.034L330.78 266 126.34 61.391c-13.785-13.805-13.785-36.239 0-50.044 13.793-13.796 36.208-13.796 50.002 0 22.928 22.947 206.395 206.507 229.332 229.454a35.065 35.065 0 0 1 10.326 25.126c0 9.2-3.393 18.26-10.326 25.2-45.865 45.901-206.404 206.564-229.332 229.52Z"
                    ></path>
                  </svg>
                </button>
              </div>
            </div>
          </section>
        </div>

        <!-- 내가 쓴 글 -->
        <div class="myBoards itemM">
          <% for (let i = 0 ; i < myBoard.length ; i ++) {%>
            <div class="board-object" data-board-id="<%=myBoard[i].BoardId%>" onclick="boardDetail(this)">
                    <div class="board-high">
                        <span id="borad-ID">등록번호 : <%=myBoard[i].BoardId%></span>
                        <span class="board-title"> 제목 : <%=myBoard[i].title%></span>
                    </div>
                    <div class="board-mid">
                        <img class="board-writer-img" src="">
                        <span class="board-writer"> 작성자 : <%=myBoard[i].writer%></span>
                        <span class="board-date"> 날짜 : <%=myBoard[i].date%></span>
                    </div>
                    <span class="board-content"> <%=myBoard[i].content%></span>
                    <div class="board-bottom">
                        <span class="board-tag"> 태그 : <%=myBoard[i].tag%></span>
                        <button type="button" class="boardLike" value="<%=myBoard[i].BoardId%>" onclick="BoardLike(this)">
                            <i class="fa-regular fa-thumbs-up"><%=likeArr[i]%></i>
                        </button>
                    </div>
                </div>
          <%} %>

        </div>
      </div>
    </div>

    <script src="/public/js/profile.js"></script>
    <script src="/public/js/header.js"></script>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>
  </body>
  <script>
    // console.log(`<%= data.profileImgPath %>`)
    // const pathdata = "<%= data.profileImgPath %>"
    window.localStorage.setItem("profileImgPath", "<%= data.profileImgPath %>");


    if(document.querySelector(".myBoards itemM").hasChildNodes){

        for(let i = 0; i < document.querySelector(".myBoards itemM").children.length; i++){
          let temp = document.querySelector(".myBoards itemM").children[i].children[2].innerText 
          document.querySelector(".myBoards itemM").children[i].children[2].innerText = ""
          let arr = Array.from(format(temp))
        for(let j = 0; j < arr.length; j++){
          document.querySelector(".myBoards itemM").children[i].children[2].appendChild(arr[j])   
    }}}
    
      //클래스만들기 함수
      async function makeClass() {
        const form = document.forms["ClassMake"];
        const data = {
        className: form.className.value,
        leader: "<%= data.name %>",
        };
           const res = await axios({
         method: "POST",
          url: "/class/make",
         data: data,
          });
         if (res.data.res) {
          alert(
            `클래스 생성완료! 클래스 공유 코드입니다 외부유출에 조심하세요 : ${res.data.token}`
         );
         }
           window.location.reload();
        }

      //클래스 들어가기 함수
      async function signinClass(){
        const form = document.forms['ClassSignin']
        const data = {
          token : form.token.value
        }
        const res = await axios({
          method : 'POST',
          url : '/class/signin',
          data : data
        })
        if(res.data.success === true) {
          alert('참여완료!')
          window.location.reload()
        } else {
          alert('존재하지않는 클래스이거나 참여코드가 틀렸습니다!')
        }
      }

  </script>
  <script type="text/javascript">
    const emblaNode = document.querySelector('.embla');
    const viewportNode = emblaNode.querySelector('.embla__viewport');
    const prevBtn = emblaNode.querySelector('.embla__button--prev');
    const nextBtn = emblaNode.querySelector('.embla__button--next');

    var options = { loop: true, containScroll: 'trimSnaps' };

    var emblaApi = EmblaCarousel(viewportNode, options);

    const addTogglePrevNextBtnsActive = (emblaApi, prevBtn, nextBtn) => {
      const togglePrevNextBtnsState = () => {
        if (emblaApi.canScrollPrev()) prevBtn.removeAttribute('disabled');
        else prevBtn.setAttribute('disabled', 'disabled');

        if (emblaApi.canScrollNext()) nextBtn.removeAttribute('disabled');
        else nextBtn.setAttribute('disabled', 'disabled');
      };

      emblaApi
        .on('select', togglePrevNextBtnsState)
        .on('init', togglePrevNextBtnsState)
        .on('reInit', togglePrevNextBtnsState);

      return () => {
        prevBtn.removeAttribute('disabled');
        nextBtn.removeAttribute('disabled');
      };
    };

    const addPrevNextBtnsClickHandlers = (emblaApi, prevBtn, nextBtn) => {
      const scrollPrev = () => {
        emblaApi.scrollPrev();
      };
      const scrollNext = () => {
        emblaApi.scrollNext();
      };
      prevBtn.addEventListener('click', scrollPrev, false);
      nextBtn.addEventListener('click', scrollNext, false);

      const removeTogglePrevNextBtnsActive = addTogglePrevNextBtnsActive(
        emblaApi,
        prevBtn,
        nextBtn,
      );

      return () => {
        removeTogglePrevNextBtnsActive();
        prevBtn.removeEventListener('click', scrollPrev, false);
        nextBtn.removeEventListener('click', scrollNext, false);
      };
    };

    const removePrevNextBtnsClickHandlers = addPrevNextBtnsClickHandlers(
      emblaApi,
      prevBtn,
      nextBtn,
    );
    emblaApi.on('destroy', removePrevNextBtnsClickHandlers);
  </script>
</html>
